<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "Application_User_Guide.ent">%BOOK_ENTITIES;]>

<chapter id="http_architecture">

	<title>HTTP Transfer Mechanism</title>
	<para>
		&THIS.APPLICATION; supports implementation of HTTP 1.1 standards and acts as HTTP Client invoking (HTTP POST) the HTTP Application deployed on 3rd Party Application Server. The 
		HTTP Request carries XML payload with USSD specific information. 
	</para>
	<para>
		HTTP callback makes 3rd Party Application agnostic to Operating System, Programming Language and Framework.
	</para>
	<para>3rd Party Application can be either of following technologies on any OS</para>
	<itemizedlist>
		<listitem><para>Apache Tomcat, JBoss AS, Oracle Application Server, IBM Websphere etc for JSP/Servlet on Java</para></listitem>
		<listitem><para>PHP</para></listitem>
		<listitem><para>Microsoft IIS for ASP</para></listitem>
	</itemizedlist>
	<para>
		HTTP errors are supported and recognized by the &THIS.APPLICATION;
	</para>
	<section id="HTTP_Messages">
		<title>HTTP Message Structure</title>
		<para>Below diagram gives example message sequence for interacting with &THIS.APPLICATION; HTTP API</para>
		<mediaobject>
			<imageobject>
				<imagedata width="300px" align="center"
					fileref="images/http-call-flow.png" format="PNG" />
			</imageobject>
			<caption>
				<para>&THIS.PLATFORM; HTTP message flow
				</para>
			</caption>
		</mediaobject>	
		<section id="MAP_PROCESS_UNSTRUCTURED_SS_REQUEST">
			<title>HTTP payload for MAP_PROCESS_UNSTRUCTURED_SS_REQUEST</title>
			<para>
				XML Payload sent to 3rd Party Application by &THIS.APPLICATION; for received MAP_PROCESS_UNSTRUCTURED_SS_REQUEST will be
			</para>		
			<programlisting language="XML" role="XML">
	<![CDATA[
	<?xml version="1.0" encoding="UTF-8" ?>
	<dialog type="BEGIN" id="1234">
		<destinationReference nai="1" npi="6" number="204208300008002"/>
		<originationReference nai="1" npi="1" number="31628968300"/>
		<processUnstructuredSSRequest invokeId="0" dataCodingScheme="15" string="*234#">
			<msisdn nai="1" npi="1" number="79273605819"/>
			<alertingPattern size="1">
				<value value="6"/>
			</alertingPattern>
		</processUnstructuredSSRequest>
	</dialog>]]>
			</programlisting>	
		
			<para>
				The XML structure is similar to actual SS7 MAP messages. <literal>&lt;dialog&gt;</literal> acts as parent tag. <literal>type</literal> attribute defines the state of <literal>Dialog</literal>.
				Following fours states are defined
				<itemizedlist>
					<listitem> <para>BEGIN : Indicates this is first message in new USSD dialog identified by attribute <literal>id</literal>. Through out the life of this dialog the id remains same. </para> </listitem>
					<listitem> <para>CONTINUE : Indicates this is continuing dialog</para> </listitem>
					<listitem> <para>END : Indicates this is end of dialog. Both Application as well as &THIS.APPLICATION; can end dialog</para> </listitem>
					<listitem> <para>ABORT : Indicates dialog is aborted. Both Application as well as &THIS.APPLICATION; can abort dialog. Abort never carries any message</para> </listitem>
				</itemizedlist>
			</para>	
			
			<para> <literal>destinationReference</literal> and <literal>originationReference</literal> are optional and will be included only if MAP Dialog has these values. </para>
			
			<para>
			Next is the actual MAP message of dialog. For &THIS.APPLICATION; six type of messages are defined
			</para>
			<variablelist>
				<varlistentry>
					<term>processUnstructuredSSRequest</term>
					<listitem>
						<para>
							This message is always sent by USSD GW to Application as HTTP POST request. Application should always send back <literal>processUnstructuredSSResponse</literal> 
							indicating that this is last message of this dialog or can also send <literal>unstructuredSSRequest</literal> indicating that Application expect's more response from user (menu structure) 
						</para> 
						<para>
							<literal>&lt;msisdn&gt;</literal> tag is optional and included only if actual MAP message received by &THIS.APPLICATION; carries this value. This is MSISDN of user who
							originated this request.
							<note>
								<title>No MSISDN</title>
								<para>If &lt;msisdn&gt; is not included in <literal>processUnstructuredSSRequest</literal>, <literal>originationReference</literal> will be included in dialog and this will be the 
									MSISDN of user originating request.
								</para>
							</note>
						</para>
						<para>
							<literal>&lt;alertingPattern&gt;</literal> is also optional.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>processUnstructuredSSResponse</term>			
					<listitem>
						<para>
							This message is always sent by Application to USSD GW as response to received <literal>processUnstructuredSSRequest</literal> or  
							<literal>unstructuredSSResponse</literal>. This should always be the last message in dialog.
						</para> 
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>unstructuredSSRequest</term>				
					<listitem> 
						<para>
							This message is always sent by Application to USSD GW in response to received <literal>processUnstructuredSSRequest</literal> or 
							<literal>unstructuredSSResponse</literal>. This indicates that application is expecting some response from user.
						</para> 
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>unstructuredSSResponse</term>					
					<listitem> 
						<para>
							This message is always sent by USSD GW to Application in HTTP POST request. This is response to <literal>unstructuredSSRequest</literal> sent by Application earlier.
						</para> 
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>unstructuredSSResponse</term>					
					<listitem> <para>unstructuredSSNotifyRequest : Not implemented yet</para> </listitem>
				</varlistentry>
				<varlistentry>
					<term>unstructuredSSResponse</term>					
					<listitem> <para>unstructuredSSNotifyResponse : Not implemented yet</para> </listitem>
				</varlistentry>			
			</variablelist>	
			
			<para>
				All message type has mandatory <literal>invokeId</literal> attribute helping to relate the response to request. For example <literal>processUnstructuredSSResponse</literal> will have same
				<literal>invokeId</literal> as carried by <literal>processUnstructuredSSRequest</literal>. Hence if application is multi level menu, it should store <literal>invokeId</literal> received in 
				<literal>processUnstructuredSSRequest</literal> in HTTP Session to use later. Also for every new request in same dialog, <literal>invokeId</literal> should be incremented by 1. For example when application
				sends <literal>unstructuredSSRequest</literal> to received <literal>processUnstructuredSSRequest</literal> with invokeId==0, it should set the invokeId==1 in <literal>unstructuredSSRequest</literal>
			</para>
			<para>
				Attributes <literal>dataCodingScheme</literal> and <literal>string</literal> are also mandatory and represents the actual USSD Message. <literal>dataCodingScheme</literal> is the encoding parameter
				of the USSD Message. 
			</para>
			<note>
				<title>USSD String length</title>
				<para>
					In GSM 0902 160 octets is stated as the maximum length for the USSD string. However due to underlying signalling layers the maximum length of the USSD string depending on the 
					message and can be less than 160
				</para>
			</note>
		</section>
		<section id="MAP_PROCESS_UNSTRUCTURED_SS_RESPONSE">
			<title>HTTP payload for MAP_PROCESS_UNSTRUCTURED_SS_RESPONSE</title>
			<para>
				XML Payload sent to &THIS.APPLICATION; by 3rd Party Application to send MAP_PROCESS_UNSTRUCTURED_SS_RESPONSE will be
			</para>		
			<programlisting language="XML" role="XML">
	<![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>
<dialog type="END" id="1234">
	<processUnstructuredSSResponse invokeId="0" dataCodingScheme="15" string="Thank You!"/>
</dialog>]]>
			</programlisting>	
			<note>
				<title>Dialog END</title>
				<para>Notice that <literal>processUnstructuredSSResponse</literal> is last message in dialog and should always be carried in dialog type END</para>
			</note>
			<important>
				<para> dialog <literal>id</literal> and <literal>invokeId</literal> will be same as received in <literal>processUnstructuredSSRequest</literal> </para>
			</important>
		</section>
		<section id="MAP_UNSTRUCTURED_SS_REQUEST">
			<title>HTTP payload for MAP_UNSTRUCTURED_SS_REQUEST</title>
			<para>
				XML Payload sent to &THIS.APPLICATION; by 3rd Party Application to send MAP_UNSTRUCTURED_SS_REQUEST will be
			</para>		
			<programlisting language="XML" role="XML">
	<![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>
<dialog type="CONTINUE" id="1234">
	<unstructuredSSRequest invokeId="1" dataCodingScheme="15" string="USSD String : Hello World&#10; 1. Balance&#10; 2. Texts Remaining"/>
</dialog>
]]>
			</programlisting>	
			<important>
				<para> dialog <literal>id</literal> will be same as received in <literal>processUnstructuredSSRequest</literal>. However <literal>invokeId</literal> is incremented by 1  </para>
			</important>
		</section>	
		<section id="MAP_UNSTRUCTURED_SS_RESPONSE">
			<title>HTTP payload for MAP_UNSTRUCTURED_SS_RESPONSE</title>
			<para>
				XML Payload sent to 3rd Party Application by &THIS.APPLICATION; for received MAP_UNSTRUCTURED_SS_RESPONSE will be
			</para>		
			<programlisting language="XML" role="XML">
	<![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>
<dialog type="CONTINUE" id="1234">
	<unstructuredSSResponse invokeId="0" dataCodingScheme="15" string="1"/>
</dialog>
]]>
			</programlisting>	
		</section>						
	</section>
</chapter>

