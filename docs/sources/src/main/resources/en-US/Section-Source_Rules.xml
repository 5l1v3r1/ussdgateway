<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Application_User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="source_rules">
	<title>Rules Source</title>
	<para>
		&THIS.APPLICATION;
		Application makes use of
		<literal>Drools</literal>
		as rules engine.
		</para><para>
		Engine is configured with <literal>DRL</literal> files. <literal>DRL</literal> file contains set of rules which perform operations on facts passed into engine.
		&THIS.APPLICATION; Application <literal>DRL</literal> file defines rules to match initial <acronym>USSD</acronym> string to set of values identifying protocol and address of peer to which messages should be forwarded.
		Rule file name is <filename>USSDGateway.drl</filename>. File content looks as follows:
	</para>
	<!-- Dev: Its java? or what -->
	<programlisting language="Java" role="JAVA"><![CDATA[
package org.mobicents.ussdgateway.rules
]]><co id="example.rules.rule.co1"/><![CDATA[
import org.mobicents.ussdgateway.rules.Call;
]]><co id="example.rules.rule.co2"/><![CDATA[
rule "USSDGateway1"
	]]><co id="example.rules.rule.co3"/><![CDATA[
	when
		$c : Call( ussdString == "*123#" )
	then]]><co id="example.rules.rule.co4"/><![CDATA[
		$c.setSip( true );
		$c.setSipProxy( "192.168.0.101" );
		$c.setSipTo("123");
		$c.setSipPort(5060);
]]><co id="example.rules.rule.co5"/><![CDATA[
end
	]]>
	</programlisting>
		<calloutlist>
			<callout arearefs="example.rules.rule.co1">
				<para>import of fact <acronym>POJO</acronym> </para>
			</callout>
			<callout arearefs="example.rules.rule.co2">
				<para>definition of rule</para>
			</callout>
			<callout arearefs="example.rules.rule.co3">
				<para>condition to enter rule clause. It accesses fact property <literal>ussdString</literal> and matches it against <literal>#123*</literal> value, if it matches engine jumps to <literal>then</literal> part</para>
			</callout>
			<callout arearefs="example.rules.rule.co4">
				<para>rule part which sets defined <acronym>SIP</acronym> peer as destination for messages</para>
			</callout>
			<callout arearefs="example.rules.rule.co5">
				<para>end of  <literal>USSDGateway1</literal> rule</para>
			</callout>
			
		</calloutlist>
	<para>
		
		
		
		
		
		
		
		
		Rules are fed with facts on which engine performs
		matching operations(in general).
		Facts are simple
		<acronym>POJO</acronym>
		classes. This applications fact looks as follows:

	</para>
	<programlisting language="Java" role="JAVA"><![CDATA[
package org.mobicents.ussdgateway.rules;

import java.io.Serializable;

/**
 * Acts as Fact for Rules
 * @author amit bhayani
 *
 */
public class Call implements Serializable {
	//Initial string, its like #123*
	private String ussdString;
	
	private boolean isSip;
	private boolean isHttp;
	private boolean isSmpp;
	
	private String sipProxy;
	private String sipTo;
	private int sipPort;
	
	//to be used with other protocols
	private String genericUrl;
	
	public Call(String ussdString){
		this.ussdString = ussdString;
	}

	public String getUssdString() {
		return ussdString;
	}

	public boolean isSip() {
		return isSip;
	}

	public void setSip(boolean isSip) {
		this.isSip = isSip;
	}

	public boolean isHttp() {
		return isHttp;
	}

	public void setHttp(boolean isHttp) {
		this.isHttp = isHttp;
	}

	public boolean isSmpp() {
		return isSmpp;
	}

	public void setSmpp(boolean isSmpp) {
		this.isSmpp = isSmpp;
	}

	public String getSipProxy() {
		return sipProxy;
	}

	public void setSipProxy(String sipProxy) {
		this.sipProxy = sipProxy;
	}

	public String getSipTo() {
		return sipTo;
	}

	public void setSipTo(String sipTo) {
		this.sipTo = sipTo;
	}

	public int getSipPort() {
		return sipPort;
	}

	public void setSipPort(int sipPort) {
		this.sipPort = sipPort;
	}

	/**
	 * @return the genericUrl
	 */
	public String getGenericUrl() {
		return genericUrl;
	}

	/**
	 * @param genericUrl the genericUrl to set
	 */
	public void setGenericUrl(String genericUrl) {
		this.genericUrl = genericUrl;
	}
	

}

	]]>
            	</programlisting>
</section>	